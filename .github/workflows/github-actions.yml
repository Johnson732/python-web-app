name: python web app github action workflow name

on:
  push:
    branches:
      - 'main'
      - 'release/**'
  workflow_dispatch:
    inputs:
      target_env:
        description: 'target environment are dev, qa, uat, prod'
        required: true
        default: 'prod'
        type: choice
        options:
          - dev
          - qa
          - uat
          - prod

env:
  APP_NAME: python_web_app
  DOCKER_REGISTRY: docker.io

jobs:
  # =====================================================
  # BUILD & PUSH IMAGE
  # =====================================================
  build-and-test:
    name: Build & Test, Push Image
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set Version
        id: set-version
        run: echo "version=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run Tests
        run: |
          pip install -r requirements.txt pytest
          pytest --junitxml=test-results.xml

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ steps.set-version.outputs.version }}
          sbom: false

      - name: Upload Image Tag Artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: |
            ./image-tag.txt
          run: echo "${{ steps.set-version.outputs.version }}" > image-tag.txt

      - name: Job Summary
        run: |
          echo "### Build completed" >> $GITHUB_STEP_SUMMARY
          echo "- Docker Image: \`${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ steps.set-version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY


  # =====================================================
  # DEV DEPLOYMENT
  # =====================================================
  deploy-dev:
    name: Deploy to Dev
    needs: build-and-test
    if: startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_DEV_CREDS }}

      - run: |
          az webapp config container set \
            --name johnson-python-webapp \
            --resource-group johnson-python-webapp \
            --docker-custom-image-name ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ needs.build-and-test.outputs.image-tag }}

      - name: Job Summary
        run: |
          echo "### Deployed to **Dev**" >> $GITHUB_STEP_SUMMARY
          echo "- Image: \`${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ needs.build-and-test.outputs.image-tag }}\`" >> $GITHUB_STEP_SUMMARY

  # =====================================================
  # QA DEPLOYMENT (triggered on release/**)
  # =====================================================
  deploy-qa:
    name: Deploy to QA
    needs: build-and-test
    if: startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest
    environment:
      name: qa   # configure manual approval in GitHub Environments
      url: https://your-app-qa-url
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_DEV_CREDS }}
          # creds: ${{ secrets.AZURE_QA_CREDS }}

      - run: |
          az webapp config container set \
            --name johnson-python-webapp \
            --resource-group johnson-python-webapp \
            --docker-custom-image-name ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ needs.build-and-test.outputs.image-tag }}

      - name: Job Summary
        run: |
          echo "### Deployed to **QA**" >> $GITHUB_STEP_SUMMARY
          echo "- Image: \`${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ needs.build-and-test.outputs.image-tag }}\`" >> $GITHUB_STEP_SUMMARY

  # =====================================================
  # UAT DEPLOYMENT (PROMOTION FROM QA)
  # =====================================================
  deploy-uat:
    name: Deploy to UAT
    needs: deploy-qa
    runs-on: ubuntu-latest
    environment:
      name: uat   # manual approval required here
      url: https://your-app-uat-url
    steps:
      - uses: azure/login@v1
        with:
          # creds: ${{ secrets.AZURE_UAT_CREDS }}
          creds: ${{ secrets.AZURE_DEV_CREDS }}

      - run: |
          az webapp config container set \
            --name johnson-python-webapp \
            --resource-group johnson-python-webapp \
            --docker-custom-image-name ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ needs.build-and-test.outputs.image-tag }}

      - name: Job Summary
        run: |
          echo "### Deployed to **UAT**" >> $GITHUB_STEP_SUMMARY
          echo "- Image: \`${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ needs.build-and-test.outputs.image-tag }}\`" >> $GITHUB_STEP_SUMMARY

  # =====================================================
  # PROD DEPLOYMENT (PROMOTION FROM UAT)
  # =====================================================
  deploy-prod:
    name: Deploy to Prod
    needs: deploy-uat
    runs-on: ubuntu-latest
    environment:
      name: prod   # manual approval required here
      url: https://your-app-prod-url
    steps:
      - uses: azure/login@v1
        with:
          # creds: ${{ secrets.AZURE_PROD_CREDS }}
          creds: ${{ secrets.AZURE_DEV_CREDS }}

      - run: |
          az webapp config container set \
            --name johnson-python-webapp \
            --resource-group johnson-python-webapp \
            # --name ${{ env.APP_NAME }} \
            # --resource-group rg-prod \
            --docker-custom-image-name ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ needs.build-and-test.outputs.image-tag }}
      - name: Job Summary
        run: |
          echo "### Deployed to **Prod**" >> $GITHUB_STEP_SUMMARY
          echo "- Image: \`${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ needs.build-and-test.outputs.image-tag }}\`" >> $GITHUB_STEP_SUMMARY
