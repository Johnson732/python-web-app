name: python web app github action workflow name

on:
  push:
    branches:
      - 'main'
      - 'release/**'
  workflow_dispatch:
    inputs:
      target_env:
        description: 'target environment are dev, qa, uat, prod'
        required: true
        default: 'prod'
        type: choice
        options:
          - dev
          - qa
          - uat
          - prod

env:
  APP_NAME: python_web_app
  DOCKER_REGISTRY: docker.io

jobs:
  build-and-test:
    name: Build & Test, Push Image
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set-version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Version
        id: set-version
        run: |
          echo "version=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Run Tests
        run: |
          pip install -r requirements.txt pytest
          pytest --junitxml=test-results.xml

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ steps.set-version.outputs.version }}
          sbom: false

  deploy-dev:
    name: Deploy to Dev
    needs: build-and-test
    if: startsWith(github.ref, 'refs/heads/main') || github.event.inputs.target_env == 'dev'
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_DEV_CREDS }}
  
      - name: Deploy to Dev
        run: |
          az webapp config container set \
            --name johnson-python-webapp \
            --resource-group johnson-python-webapp \
            --docker-custom-image-name ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ needs.build-and-test.outputs.image-tag }}

  deploy-qa:
    name: Deploy to QA
    needs: build-and-test
    if: github.event.inputs.target_env == 'qa'
    runs-on: ubuntu-latest
    environment:
      name: qa
      url: https://your-app-qa-url
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_QA_CREDS }}

      - name: Deploy to QA
        run: |
          az webapp config container set \
            --name ${{ env.APP_NAME }}-qa \
            --resource-group rg-qa \
            --docker-custom-image-name ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ needs.build-and-test.outputs.image-tag }}

  deploy-uat:
    name: Deploy to UAT
    needs: build-and-test
    if: github.event.inputs.target_env == 'uat'
    runs-on: ubuntu-latest
    environment:
      name: uat
      url: https://your-app-uat-url
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_UAT_CREDS }}

      - name: Deploy to UAT
        run: |
          az webapp config container set \
            --name ${{ env.APP_NAME }}-uat \
            --resource-group rg-uat \
            --docker-custom-image-name ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ needs.build-and-test.outputs.image-tag }}

  deploy-prod:
    name: Deploy to Prod
    needs: build-and-test
    if: github.event.inputs.target_env == 'prod'
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://your-app-prod-url
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_PROD_CREDS }}

      - name: Deploy to Production
        run: |
          az webapp config container set \
            --name ${{ env.APP_NAME }} \
            --resource-group rg-prod \
            --docker-custom-image-name ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ needs.build-and-test.outputs.image-tag }}
